plugins {
	id 'com.diffplug.gradle.spotless' version '3.21.0'
}

repositories {
	// for buildcloset
	maven {
		url 'http://artifactory.diffplug.local/artifactory/libs-release-local/'
		content {
			includeGroup 'com.diffplug.dpframework'
		}
	}
	jcenter()
	if (ALLOW_SNAPSHOT.toBoolean()) {
		maven { url 'http://artifactory.diffplug.local/artifactory/libs-snapshot-local/' }
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
	}
}
if (ALLOW_SNAPSHOT.toBoolean()) {
	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}
}

configurations {
	compileGitBookClasspath
}
dependencies {
	compileGitBookClasspath 'com.diffplug.dpframework:com.diffplug.blockdoc:2.0.2'
}

class CompileGitBook extends DefaultTask {
	@Classpath      Object cp = project.configurations.compileGitBookClasspath
	@InputDirectory File   input
	@InputDirectory File   template
	@Input          String prefix
	@Input          String mode = 'FULL'
	@OutputDirectory File  output

	CompileGitBook() {
		
	}

	@TaskAction
	void compileGitBook() {
		project.javaexec({
			classpath = project.configurations.compileGitBookClasspath
			main = 'com.diffplug.blockdoc.markdown.DiffPlugManualFormat'
			args = [
				input.absolutePath,
				output.absolutePath,
				template.absolutePath,
				prefix,
				mode
				]
		})
	}
}

// pip install rangehttpserver
// cd build/web
// python -m RangeHTTPServer
task compileWeb(type: CompileGitBook) {
	input file('.')
	output file('build/web')
	template file('_template')
	prefix = "/"
}

spotless {
	format 'manual', {
		target 'web/*.html', 'markdown/**/*.md'
		indentWithTabs()
		trimTrailingWhitespace()
		endWithNewline()
	}
}
