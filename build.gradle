plugins {
	id 'com.diffplug.gradle.spotless' version '3.21.0'
}

repositories {
	// for buildcloset
	maven {
		url 'http://artifactory.diffplug.local/artifactory/libs-release-local/'
		content {
			includeGroup 'com.diffplug.dpframework'
		}
	}
	jcenter()
	if (ALLOW_SNAPSHOT.toBoolean()) {
		maven { url 'http://artifactory.diffplug.local/artifactory/libs-snapshot-local/' }
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
	}
}
if (ALLOW_SNAPSHOT.toBoolean()) {
	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}
}

configurations {
	compile
}
dependencies {
	compile 'com.diffplug.dpframework:com.diffplug.blockdoc:2.0.2'

	// failed transitives while using included-build
	compile 'com.diffplug.dpframework:com.diffplug.closet:2.0.2'
	compile 'com.diffplug.dpframework:com.diffplug.entity:2.0.2'

	compile 'com.github.spullara.mustache.java:compiler:0.9.6'
	String VER_COMMONMARK = '0.12.1'
	compile "com.atlassian.commonmark:commonmark:$VER_COMMONMARK"
	compile "com.atlassian.commonmark:commonmark-ext-gfm-tables:$VER_COMMONMARK"
	compile "com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:$VER_COMMONMARK"
	compile "com.atlassian.commonmark:commonmark-ext-yaml-front-matter:$VER_COMMONMARK"
}

class CompileGitBook extends DefaultTask {
	@Classpath      Object cp = project.configurations.compile
	@InputDirectory File   input
	@InputDirectory File   template
	@Input          String prefix
	@Input          String mode = 'FULL'
	@OutputDirectory File  output

	CompileGitBook() {
		//dependsOn(':com.diffplug.blockdoc:jar')
	}

	@TaskAction
	void compileGitBook() {
		project.javaexec({
			classpath = project.configurations.compile
			main = 'com.diffplug.blockdoc.markdown.DiffPlugManualFormat'
			args = [
				input.absolutePath,
				output.absolutePath,
				template.absolutePath,
				prefix,
				mode
				]
		})
	}
}

// pip install rangehttpserver
// cd build/web
// python -m RangeHTTPServer
task compileWeb(type: CompileGitBook) {
	input file('.')
	output file('build/web')
	template file('_template')
	prefix = "/"
}

spotless {
	format 'build', {
		target '*.gradle'
		indentWithTabs()
		trimTrailingWhitespace()
		endWithNewline()
	}
}
